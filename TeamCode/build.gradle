//
// build.gradle in TeamCode
//
// Most of the definitions for building your module reside in a common, shared
// file 'build.common.gradle'. Being factored in this way makes it easier to
// integrate updates to the FTC into your code. If you really need to customize
// the build definitions, you can place those customizations in this file, but
// please think carefully as to whether such customizations are really necessary
// before doing so.


// Custom definitions may go here

// Include common definitions from above.
apply from: '../build.common.gradle'
apply from: '../build.dependencies.gradle'

android {
    namespace = 'org.firstinspires.ftc.teamcode'
    buildFeatures {
        mlModelBinding true
    }

    packagingOptions {
        jniLibs.useLegacyPackaging true
        exclude("META-INF/native-image/ios-x86_64/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/linux-x86_64/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/windows-x86/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/android-x86_64/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/android-x86/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/ios-arm64/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/windows-x86_64/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/windows-x86_64/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/android-arm/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/macosx-arm64/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/linux-ppc64le/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/linux-x86_64/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/linux-arm64/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/android-arm64/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/android-arm/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/ios-x86_64/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/android-arm64/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/windows-x86/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/macosx-x86_64/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/linux-x86/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/ios-arm64/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/linux-armhf/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/macosx-arm64/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/linux-x86/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/android-x86/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/linux-armhf/jnijavacpp/jni-config.json")
        exclude("META-INF/native-image/linux-ppc64le/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/android-x86_64/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/reflect-config.json")
        exclude("META-INF/native-image/linux-arm64/jnijavacpp/reflect-config.json")
        exclude("META-INF/native-image/macosx-x86_64/jnijavacpp/jni-config.json")
    }
}

configurations.all {
    resolutionStrategy {
        force 'org.openftc:opencv-repackaged-bundled-dylibs:4.5.3-C'
    }
}

dependencies {
    implementation project(':FtcRobotController')
    annotationProcessor files('lib/OpModeAnnotationProcessor.jar')
}


dependencies {

    implementation 'org.tensorflow:tensorflow-lite-metadata:0.1.0'
    implementation ('org.openftc:easyopencv:1.6.2')
}


